let LAYOUT = `
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,1
1,2,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,2,1
1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1
1,2,1,1,2,1,2,1,1,1,1,1,2,1,2,1,1,2,1
1,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,1
1,1,1,1,2,1,1,1,0,1,0,1,1,1,2,1,1,1,1
0,0,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0
1,1,1,1,2,1,0,1,1,0,1,1,0,1,2,1,1,1,1
1,0,0,0,2,0,0,1,0,0,0,1,0,0,2,0,0,0,1
1,1,1,1,2,1,0,1,1,1,1,1,0,1,2,1,1,1,1
0,0,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0
1,1,1,1,2,1,0,1,1,1,1,1,0,1,2,1,1,1,1
1,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,1
1,2,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,2,1
1,2,2,1,2,2,2,2,2,0,2,2,2,2,2,1,2,2,1
1,1,2,1,2,1,2,1,1,1,1,1,2,1,2,1,2,1,1
1,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,1
1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,1
1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
`;

//LAYOUT의 2차원 그리드화(x, y)
if(true){
    LAYOUT = LAYOUT.trim().split('\n').map(v => v.split(','));
    let arr = new Array(LAYOUT[0].length).fill(new Array(LAYOUT.length).fill(0));

    //LAYOUT(y, x) -> arr(x, y)
    for(let x in arr){
        arr[x] = arr[x].map((v, y) => LAYOUT[y][x]);
    }

    LAYOUT = arr;
}

const SCORE = {
    'DOT': 10
};

const getStageDelay = stage => (1000 / Math.pow(stage, 2/3) + 500) / 2 >> 0;